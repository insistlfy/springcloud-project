server:
  port: 9000
spring:
  application:
    name: lfy-gateway
  redis:
    host: localhost
    password: 123456
    port: 6379
    timeout:
    jedis:
      pool:
        max-idle:
  cloud:
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，
          #这个router将以服务名开头的请求路径转发到对应的服务
          enabled: true
          #将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写了)
          lower-case-service-id: true
      routes:
        - id: lfy-first
          #lb注册中心配置方式
          uri: lb://lfy-first
          predicates:
            # 路由规则
            - Path=/first/**
          filters:
            - name: RequestRateLimiter
              args:
                # 每秒允许处理的请求数量
                redis-rate-limiter.replenishRate: 1
                # 每秒最大处理的请求数量
                redis-rate-limiter.burstCapacity: 2
                # 限流策略，对应策略的Bean
                key-resolver: "#{@ipKeyResolver}"
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: 'forward:/fallback'
        - id: lfy-second
          uri: lb://lfy-second
          predicates:
            - Path=/second/**
          filters:
            - name: Retry
              args:
                # 需要进行重试的次数
                retries: 1
                # 用来指定哪些段的状态码需要重试，默认SERVER_ERROR，即5xx。
                series:
                  - SERVER_ERROR
                # 返回哪个状态码需要进行重试
                statuses:
                  - INTERNAL_SERVER_ERROR
                  - BAD_GATEWAY
                # 指定那些方法的请求需要重试，默认为GET
                methods:
                  - GET
                  - POST
                # 用于指定哪些异常需要重试，默认为java.io.IOException、java.util.concurrent.TimeoutException
                exceptions:
                  - java.io.IOException
                  - java.util.concurrent.TimeoutException
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false
            - name: Hystrix
              args:
                name: fallback
                fallbackUri: forward:/fallback

eureka:
  instance:
    hostname: localhost
  client:
    #表示是否注册Eureka服务器,因为自身作为服务注册中心，所以为false
    register-with-eureka: true
    #从Eureka服务端获取注册信息的时间间隔，单位：秒
    registry-fetch-interval-seconds: 30
    #是否从Eureka服务端获取注册信息
    fetch-registry: true
    service-url:
      defaultZone: http://admin:admin@${eureka.instance.hostname}:8000/eureka/
  server:
    wait-time-in-ms-when-sync-empty: 0
    #清理间隔，一旦服务down掉，则默认60秒（此处2秒）才注销该服务
    eviction-interval-timer-in-ms: 2000
    #Eureka的自我保护机制
    enable-replicated-request-compression: false

# 熔断器
hystrix:
  metrics:
    enabled: true
    polling-interval-ms: 3000

management:
  endpoints:
    web:
      exposure:
        include: '*'
      cors:
        allowed-origins: '*'
        allowed-methods: '*'
  endpoint:
    health:
      show-details: always

# jwt configuration
jwt:
  # 存放Token的Header key值
  token: token
  # 自定义密钥，加盐
  secret: mySecret
  # 超时时间 单位秒
  expiration: 3600
  # accessToken超时时间 单位秒
  access-token: 3600
  # 刷新token时间 单位秒
  refresh-token: 3600
  # 允许访问的uri
  permit-all: /oauth/**,/login/**,/logout/**
  # 需要校验的uri
  auth-uri: /api/**
